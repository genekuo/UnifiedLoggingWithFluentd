# This supports the first example of writing to a file output

# set Fluentd's configuration parameters
<system>
    Log_Level info
</system>

#### begin
<source>
  @type tail
  path ./Chapter4/structured-rolling-log.0.log
  rotate_wait = 15s
  read_lines_limit 5
  tag simpleFile
  pos_file ./Chapter4/rotating-file-read.pos_file
  read_from_head true
  @id RollingLog
  <parse>
    @type regexp
    expression /(?<time>\S+).(?<level>[A-Z]+)\s*(?<class>\S+)[^\d]*(?<line>[\d]*)\-(?<iteration>[\d]*)\)(?<msg>.*)/
    time_format %Y-%m-%d--%T
    time_key time
    types line:integer,iteration:integer
    keep_time_key true
  </parse>
</source>
#### end


# the earlier match directive is commented out so it can be re-instated
# if things get difficult
# accept all log events regardless of tag and write them to the console
#<match *>
#    @type stdout
#</match>

<match *>
    @type mongo
    @id mongo-output
    host localhost
    port 27017
    database Fluentd
    collection Fluentd
    <buffer>
      delayed_commit_timeout 10
      flush_at_shutdown true
      chunk_limit_records 50
      flush_interval 30
      flush_mode interval
    </buffer>
</match>
