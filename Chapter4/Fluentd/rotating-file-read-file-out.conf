# This supports the first example of writing to a file output

# set Fluentd's configuration parameters
<system>
    Log_Level info
</system>

#### begin
<source>
  @type tail
  path ./Chapter4/structured-rolling-log.0.log
  rotate_wait = 15s
  read_lines_limit 5
  tag simpleFile
  pos_file ./Chapter4/rotating-file-read.pos_file
  read_from_head true
  @id RollingLog
  <parse>
    @type regexp
    expression /(?<time>\S+)\s(?<level>[A-Z]*)\s*(?<class>\S+)[^\d]*(?<line>[\d]*)\-(?<iteration>[\d]*)\)[\s]+\{"log":"(?<msg>.*(?="\}))/
    time_format %Y-%m-%d--%T
    time_key time
    types line:integer,iteration:integer
    keep_time_key true
  </parse>
</source>
#### end

### begin - monitor_agent
<source>
  @type monitor_agent
  bind 0.0.0.0
  port 24220
  @id in_monitor_agent
  include_config true  

  # we have now introduced these attributes to extend the original configuration
  tag self
  emit_interval 10s
</source>
### end - monitor_agent


# the earlier match directive is commented out so it can be re-instated
# if things get difficult
# accept all log events regardless of tag and write them to the console
#<match *>
#    @type stdout
#</match>

<match *>
    @type file
    path ./Chapter4/fluentd-file-output
</match>
